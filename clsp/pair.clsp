; the singleton that powers a pair
; author: yakuhito

; modeled after https://github.com/Uniswap/v1-contracts/blob/master/contracts/uniswap_exchange.vy

(mod (
        PAIR_MOD_HASH ; sha256 of this module / puzzle (uncurried)
        SINGLETON_STRUCT  ; to quote did_innerpuz.clvm, 
            ;; 'my singleton_struct, formerly a Truth - ((SINGLETON_MOD_HASH, (LAUNCHER_ID, LAUNCHER_PUZZLE_HASH)))'
        P2_SINGLETON_FLASHLOAN_MOD_HASH ; sha256tree of the p2_singleton_flashloan module (uncurried)
        CAT_MOD_HASH ; sha256tree of the cat_v2 module (uncurried)
        LIQUIDITY_TAIL_MOD_HASH ; sha256 tree of the liquidity TAIL (uncurried)
        SETTLEMENT_PAYMENTS_MOD_HASH ; sha256 tree of settlement_payments.clvm (not that it has any curried arguments, but still)

        TAIL_HASH ; identifies the token this pair holds
        INVERSE_FEE ; this cleverly-named variable is calculated as 1000 - FEE
            ;; FEE is, for example, 7 for 0.7% (will get divided by a thousand)
            ;; meaning INVERSE_FEE is 993 (user swaps 99.3% of their input assets to output - tokens or XCH)
            ;; 0.7% is kept as lp fee

        LIQUIDITY ; holds the total number of liquidity tokens in existence
        XCH_RESERVE ; 'contract balance' of XCH
        TOKEN_RESERVE ; 'contract balance' of tokens

        coin_ids ; needed for every spend - this coin & reserves they are (re)created in tandem
            ;; format: (my_coin_id xch_reserve_coin_id token_reserve_coin_id)
        action ; action the user wants to take
            ;; 0 - add liquidity (money printer go brr)
            ;; 1 - remove liquidity (sorry to see you go!)
            ;; 2 - XCH to token (sell XCH, buy token)
            ;; 3 - token to XCH (buy XCH, sell token)
        params ; params for the called method
            ;; add liquidity: (token_amount liquidity_inner_puzzle_hash liquidity_parent_id [xch_amount])
            ;;;      [xch_amount] - optional; ONLY taken into account IF there is no liquidity (this is the initial deposit)
            ;; remove liquidity: (liquidity_tokens_amount liquidity_inner_puzzle_hash liquidity_parent_id)
            ;; xch to token: (xch_amount)
            ;; token to xch: (token_amount)
    )
    
    ; libs
    (include curry.clinc)
    (include condition_codes.clvm)
    (include tibet_utils.clib)

    ; params
    
    ;; 1 - remove liquidity
    

    ;; 2 - xch to token
    (defun-inline xch_to_token_xch_amount_from_params (params) (f params))

    ;; 3 - token to xch
    (defun-inline token_to_xch_token_amount_from_params (params) (f params))

    ;; liquidity-related converters
    (defun-inline xch_amount_from_token_amount (token_amount)
        (f (divmod (* token_amount XCH_RESERVE) TOKEN_RESERVE))
    )

    (defun-inline xch_amount_from_liquidity_amount (liquidity_amount)
        (f (divmod (* liquidity_amount XCH_RESERVE) LIQUIDITY))
    )

    (defun-inline token_amount_from_liquidity_amount (liquidity_amount)
        (f (divmod (* liquidity_amount TOKEN_RESERVE) LIQUIDITY))
    )

    (defun-inline liquidity_minted_from_token_amount (token_amount)
        (f (divmod (* token_amount LIQUIDITY) TOKEN_RESERVE))
    )

    ;; exchange-related

    ; https://github.com/Uniswap/v1-contracts/blob/master/contracts/uniswap_exchange.vy#L106
    (defun-inline get_input_price (input_amount input_reserve output_reserve)
        (f
            (divmod
                ; numerator
                (* output_reserve (* input_amount INVERSE_FEE))
                ; denominator
                (+ (* input_reserve 1000) (* input_amount INVERSE_FEE))
            )
        )
    )

    ; begin main methods
    ;; gt0 = liquidity > 0
    ;; 0 = liquidity = 0
    (defun-inline add_liquidity_gt0_ok (
        token_amount
    )
        (all
            (> token_amount 0)
            (> (xch_amount_from_token_amount token_amount) 0)
            (> (liquidity_minted_from_token_amount token_amount) 0)
        )
    )

    (defun-inline add_liquidity_gt0_liquidity (
            token_amount
        )
        (+ LIQUIDITY (liquidity_minted_from_token_amount token_amount))
    )

    (defun-inline add_liquidity_gt0_xch_reserve (
            token_amount
        )
        (+ XCH_RESERVE (xch_amount_from_token_amount token_amount))
    )

    (defun-inline add_liquidity_gt0_token_reserve (
            token_amount
        )
        (+ TOKEN_RESERVE token_amount)
    )

    

    (defun-inline add_liquidity_0_ok (
        xch_amount
        token_amount
    )
        (all
            (> token_amount 99) ; min token amount: 0.1
            (> xch_amount 99999999) ; min XCH amount: 100,000,000 (0.4 cents at the time of writing this, probably less than a million in the future)
        )
    )

    (defun-inline add_liquidity_0_liquidity (
            token_amount
        )
        token_amount
    )

    (defun-inline add_liquidity_0_xch_reserve (
            xch_amount
        )
        xch_amount
    )

    (defun-inline add_liquidity_0_token_reserve (
            token_amount
        )
        token_amount
    )

    ; remove liquidity
    (defun-inline remove_liqiudity_ok (
        liquidity_tokens_amount
    )
        (all
            (> LIQUIDITY 0)
            (not (> liquidity_tokens_amount LIQUIDITY)) ; liquidity_tokens_amount <= LIQUIDITY
        )
    )

    (defun-inline remove_liqiudity_liquidity (
            liquidity_tokens_amount
        )
        (- LIQUIDITY liquidity_tokens_amount)
    )

    (defun-inline remove_liqiudity_xch_reserve (
            liquidity_tokens_amount
        )
        (- XCH_RESERVE (xch_amount_from_liquidity_amount liquidity_tokens_amount))
    )

    (defun-inline remove_liqiudity_token_reserve (
            liquidity_tokens_amount
        )
        (- TOKEN_RESERVE (token_amount_from_liquidity_amount liquidity_tokens_amount))
    )

    ; xch to token
    (defun-inline xch_to_token_ok (
        xch_amount
    )
        (all
            (> LIQUIDITY 0)
            (> xch_amount 0)
        )
    )

    (defun-inline xch_to_token_xch_reserve (
            xch_amount
        )
        (+ XCH_RESERVE xch_amount)
    )

    (defun-inline xch_to_token_token_reserve (
            xch_amount
        )
        (- TOKEN_RESERVE (get_input_price xch_amount XCH_RESERVE TOKEN_RESERVE))
    )

    ; token to xch
    (defun-inline token_to_xch_ok (
        token_amount
    )
        (all
            (> LIQUIDITY 0)
            (> token_amount 0)
        )
    )

    (defun-inline token_to_xch_xch_reserve (
            token_amount
        )
        (- XCH_RESERVE (get_input_price token_amount TOKEN_RESERVE XCH_RESERVE))
    )

    (defun-inline token_to_xch_token_reserve (
            token_amount
        )
        (+ TOKEN_RESERVE token_amount)
    )

    ; actual logic stuff

    ;; function codes

    (defun-inline get_ok_condition ()
        (if (> action ACTION_REMOVE_LIQUIDITY)
            (if (= action ACTION_XCH_TO_TOKEN)
                (xch_to_token_ok
                    (xch_to_token_xch_amount_from_params params)
                )
                ; else action > ACTION_REMOVE_LIQUIDITY, action != ACTION_XCH_TO_TOKEN -> action = ACTION_TOKEN_TO_XCH
                (token_to_xch_ok
                    (token_to_xch_token_amount_from_params params)
                )
            )
            ; else action <= ACTION_REMOVE_LIQUIDITY
            (if (= action ACTION_REMOVE_LIQUIDITY)
                (remove_liqiudity_ok
                    (remove_liquidity_liquidity_tokens_amount_from_params params)
                )
                ; else action < ACTION_REMOVE_LIQUIDITY -> action = ACTION_ADD_LIQUIDITY
                ; add_liquidity behaves differently if the liquidity is 0 
            )
        )
    )

    (defun-inline get_new_liquidity ()
        (if (> action ACTION_REMOVE_LIQUIDITY)
            LIQUIDITY
            ; else action <= ACTION_REMOVE_LIQUIDITY
            (if (= action ACTION_REMOVE_LIQUIDITY)
                (remove_liqiudity_liquidity
                    (remove_liquidity_liquidity_tokens_amount_from_params params)
                )
                ; else action < ACTION_REMOVE_LIQUIDITY -> action = ACTION_ADD_LIQUIDITY
                ; add_liquidity behaves differently if the liquidity is 0 
                (if (= LIQUIDITY 0)
                    (add_liquidity_0_liquidity
                        (add_liquidity_token_amount_from_params params)
                    )
                    ; else liquidity > 0
                    (add_liquidity_gt0_liquidity
                        (add_liquidity_token_amount_from_params params)
                    )
                )
            )
        )
    )

    (defun-inline get_new_xch_reserve ()
        (if (> action ACTION_REMOVE_LIQUIDITY)
            (if (= action ACTION_XCH_TO_TOKEN)
                (xch_to_token_xch_reserve
                    (xch_to_token_xch_amount_from_params params)
                )
                ; else action > ACTION_REMOVE_LIQUIDITY, action != ACTION_XCH_TO_TOKEN -> action = ACTION_TOKEN_TO_XCH
                (token_to_xch_xch_reserve
                    (token_to_xch_token_amount_from_params params)
                )
            )
            ; else action <= ACTION_REMOVE_LIQUIDITY
            (if (= action ACTION_REMOVE_LIQUIDITY)
                (remove_liqiudity_xch_reserve
                    (remove_liquidity_liquidity_tokens_amount_from_params params)
                )
                ; else action < ACTION_REMOVE_LIQUIDITY -> action = ACTION_ADD_LIQUIDITY
                ; add_liquidity behaves differently if the liquidity is 0 
                (if (= LIQUIDITY 0)
                    (add_liquidity_0_xch_reserve
                        (add_liquidity_xch_amount_from_params params)
                    )
                    ; else liquidity > 0
                    (add_liquidity_gt0_xch_reserve
                        (add_liquidity_token_amount_from_params params)
                    )
                )
            )
        )
    )

    (defun-inline get_new_token_reserve ()
        (if (> action ACTION_REMOVE_LIQUIDITY)
            (if (= action ACTION_XCH_TO_TOKEN)
                (xch_to_token_token_reserve
                    (xch_to_token_xch_amount_from_params params)
                )
                ; else action > ACTION_REMOVE_LIQUIDITY, action != ACTION_XCH_TO_TOKEN -> action = ACTION_TOKEN_TO_XCH
                (token_to_xch_token_reserve
                    (token_to_xch_token_amount_from_params params)
                )
            )
            ; else action <= ACTION_REMOVE_LIQUIDITY
            (if (= action ACTION_REMOVE_LIQUIDITY)
                (remove_liqiudity_token_reserve
                    (remove_liquidity_liquidity_tokens_amount_from_params params)
                )
                ; else action < ACTION_REMOVE_LIQUIDITY -> action = ACTION_ADD_LIQUIDITY
                ; add_liquidity behaves differently if the liquidity is 0 
                (if (= LIQUIDITY 0)
                    (add_liquidity_0_token_reserve
                        (add_liquidity_token_amount_from_params params)
                    )
                    ; else liquidity > 0
                    (add_liquidity_gt0_token_reserve
                        (add_liquidity_token_amount_from_params params)
                    )
                )
            )
        )
    )

    (defun-inline get_extra_output_conditions ()
        (if (> action ACTION_REMOVE_LIQUIDITY)
            ()
            ; else action <= ACTION_REMOVE_LIQUIDITY
            (if (= action ACTION_REMOVE_LIQUIDITY)
                (remove_liquidity_conditions
                    (remove_liquidity_liquidity_tokens_amount_from_params params)
                    (remove_liqiudity_liquidity_inner_puzzle_hash_from_params params)
                    (remove_liqiudity_liquidity_parent_id_from_params params)
                )
                ; else action < ACTION_REMOVE_LIQUIDITY -> action = ACTION_ADD_LIQUIDITY
                ; add_liquidity behaves differently if the liquidity is 0 
                (if (= LIQUIDITY 0)
                    (add_liquidity_0_conditions
                        (add_liquidity_token_amount_from_params params)
                        (add_liquidity_liquidity_parent_id_from_params params)
                        (add_liquidity_liquidity_inner_puzzle_hash_from_params params)
                    )
                    ; else liquidity > 0
                    (add_liquidity_gt0_conditions
                        (add_liquidity_token_amount_from_params params)
                        (add_liquidity_liquidity_parent_id_from_params params)
                        (add_liquidity_liquidity_inner_puzzle_hash_from_params params)
                    )
                )
            )
        )
    )
)
