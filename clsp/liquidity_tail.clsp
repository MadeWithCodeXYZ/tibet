; liquidity TAIL - allows mint by singleton; announces when burned
; author: yakuhito

; used as the TAIL of a pair's liquidity CAT

(mod (
      ; pair / controller SINGLETON_STRUCT
      SINGLETON_STRUCT  ; to quote did_innerpuz.clvm, 
            ;; 'my singleton_struct, formerly a Truth - ((SINGLETON_MOD_HASH, (LAUNCHER_ID, LAUNCHER_PUZZLE_HASH)))'
      Truths
      parent_is_cat
      lineage_proof
      delta
      inner_conditions
      tail_solution 
        ; (singleton_inner_puzzle_hash singleton_parent_id)
    )

    (include tibet_utils.clib)
    (include cat_truths.clib)

    ; tail solution to function args
    (defun-inline singleton_inner_puzzle_hash_from_solution (tail_solution) (f tail_solution))
    (defun-inline singleton_parent_id_from_solution (tail_solution) (f (r tail_solution)))

    (defun-inline calculate_full_puzzle_hash (inner_puzzle_hash)
       (curry_hashes_inline (singleton_mod_hash_from_struct SINGLETON_STRUCT)
            (sha256tree SINGLETON_STRUCT)
            inner_puzzle_hash
        )
    )

    (defun-inline output_conditions (
        singleton_full_puzzle_hash
        singleton_coin_id
        my_id ; trusted (from Truths)
        my_amount ; trusted (from Truths)
        keyword ; either "mint" or "burn"
    )
        (list
            (list
                ASSERT_PUZZLE_ANNOUNCEMENT
                (sha256
                    singleton_full_puzzle_hash
                    (sha256
                        singleton_coin_id
                        keyword
                        my_id
                        my_amount
                    )
               )
            )
            (list
                CREATE_COIN_ANNOUNCEMENT
                (sha256 singleton_coin_id keyword)
            )
        )
    )

    (defun-inline stager (
        singleton_full_puzzle_hash
        singleton_parent_id
    )
        (output_conditions
            singleton_full_puzzle_hash
            (calculate_coin_id singleton_parent_id singleton_full_puzzle_hash 1)
            (my_id_cat_truth Truths)
            (my_amount_cat_truth Truths)
            (if parent_is_cat BURN_KEYWORD MINT_KEYWORD)
        )
    )

    ; main
    (if (any
            (all (not parent_is_cat) (= delta 0)) ; mint
            (all parent_is_cat (= (- 0 delta) (my_amount_cat_truth Truths))) ; burn
        )
        (stager
            (calculate_full_puzzle_hash (singleton_inner_puzzle_hash_from_solution tail_solution))
            (singleton_parent_id_from_solution tail_solution)
        )
        ; else
        (x)
    )
)
