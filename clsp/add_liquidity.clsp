(mod (
        CAT_MOD_HASH ; sha256tree of the cat_v2 module (uncurried)
        LIQUIDITY_TAIL_MOD_HASH ; sha256 tree of the liquidity TAIL (uncurried)
        current_state
        params
        my_singleton_struct
        my_coin_id
    )

    (include tibet_utils.clib)

    ; params
    (defun-inline token_amount_from_params (params) (f params))
    (defun-inline liquidity_inner_puzzle_hash_from_params (params) (f (r params)))
    (defun-inline liquidity_parent_id_from_params (params) (f (r (r params))))
    (defun-inline xch_amount_from_params (params) (f (r (r (r params)))))

    ; main
    (defun-inline deposit_liquidity (
        current_liquidity
        current_xch_reserve
        current_token_reserve

        token_amount
        liquidity_inner_puzzle_hash
        liquidity_parent_id
        xch_amount

        liquidity_delta
        xch_delta
        token_delta
    )
        (if (all
                (> token_amount 0)
                (any (> current_liquidity 0) (> xch_amount 0))
            )
            (c
                ; new state 
                (construct_state
                    ; new liquidity
                    (+ current_liquidity liquidity_delta)
                    ; new xch reserve
                    (+ current_xch_reserve xch_delta)
                    ; new token reserve
                    (+ current_token_reserve token_delta)
                )
                ; extra conditions
                (liquidity_extra_conditions
                    my_coin_id liquidity_delta liquidity_parent_id liquidity_inner_puzzle_hash MINT_KEYWORD my_singleton_struct LIQUIDITY_TAIL_MOD_HASH CAT_MOD_HASH
                )
            )
            ; else
            (x)
        )
    )

    (defun-inline stager ( 
        current_liquidity
        current_xch_reserve
        current_token_reserve

        token_amount
        liquidity_inner_puzzle_hash
        liquidity_parent_id
        xch_amount
    )
        (deposit_liquidity
            current_liquidity
            current_xch_reserve
            current_token_reserve

            token_amount
            liquidity_inner_puzzle_hash
            liquidity_parent_id
            xch_amount

            (if (= current_liquidity 0)
                token_amount
                ; else 
                (f (divmod (* token_amount current_liquidity) current_token_reserve))
            )

            (if (= current_liquidity 0)
                xch_amount
                ; else
                (f (divmod (* token_amount current_xch_reserve) current_token_reserve))
            )

            token_amount
        )
    )

    (stager
        (liquidity_from_state current_state)
        (xch_reserve_from_state current_state)
        (token_reserve_from_state current_state)

        (token_amount_from_params params)
        (liquidity_inner_puzzle_hash_from_params params)
        (liquidity_parent_id_from_params params)
        (if (= (liquidity_from_state current_state) 0)
            (xch_amount_from_params params)
            0
        )
    )
)