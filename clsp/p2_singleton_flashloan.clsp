; p2_singleton, but for flashloans!
;; code modified from https://github.com/Chia-Network/chia-blockchain/blob/main/chia/wallet/puzzles/p2_singleton.clsp
;; this puzzle is INSECURE for most use cases
;; as it allows anyone to do anything with the funds once a singleton spends them

;; modified by yauhito, written by a lot of people from CNI

;; it's secure for tibet, though, since the singleton checks that the pair reserve is recreated
;; i.e., "I don't care what you do with these funds as long as you return them"

;; but, please, use it with caution

(mod (
    SINGLETON_MOD_HASH
    LAUNCHER_ID
    LAUNCHER_PUZZLE_HASH
    singleton_inner_puzzle_hash
    my_id
    additional_output_conditions ;; literally anyone can modify these - please be careful
)

    ; SINGLETON_MOD_HASH is the mod-hash for the singleton_top_layer puzzle
    ; LAUNCHER_ID is the ID of the singleton we are commited to paying to
    ; LAUNCHER_PUZZLE_HASH is the puzzle hash of the launcher
    ; singleton_inner_puzzle_hash is the innerpuzzlehash for our singleton at the current time
    ; my_id is the coin_id of the coin that this puzzle is locked into

    (include tibet_utils.clib)

    ;; return the full puzzlehash for a singleton with the innerpuzzle curried in
    ; puzzle-hash-of-curried-function is imported from curry-and-treehash.clinc
    (defun-inline calculate_full_puzzle_hash (SINGLETON_MOD_HASH LAUNCHER_ID LAUNCHER_PUZZLE_HASH inner_puzzle_hash)
        (curry_hashes_inline SINGLETON_MOD_HASH
            (sha256tree (c SINGLETON_MOD_HASH (c LAUNCHER_ID LAUNCHER_PUZZLE_HASH)))
            inner_puzzle_hash                                
        )
    )

    (defun-inline add_claim_rewards_conditions (
        SINGLETON_MOD_HASH LAUNCHER_ID LAUNCHER_PUZZLE_HASH singleton_inner_puzzle_hash my_id
        base_condition_list
    )
        (c (list ASSERT_PUZZLE_ANNOUNCEMENT (sha256 (calculate_full_puzzle_hash SINGLETON_MOD_HASH LAUNCHER_ID LAUNCHER_PUZZLE_HASH singleton_inner_puzzle_hash) my_id))
            (c (list CREATE_COIN_ANNOUNCEMENT '$')
                (c (list ASSERT_MY_COIN_ID my_id) base_condition_list)
            )
        )
    )

    ; main
    (add_claim_rewards_conditions
        SINGLETON_MOD_HASH LAUNCHER_ID LAUNCHER_PUZZLE_HASH singleton_inner_puzzle_hash my_id
        additional_output_conditions
    )
)

